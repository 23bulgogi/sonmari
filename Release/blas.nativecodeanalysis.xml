<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>38</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>flatten</FUNCTION>
    <DECORATED>flatten</DECORATED>
    <FUNCLINE>36</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>38</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>flatten</FUNCTION>
    <DECORATED>flatten</DECORATED>
    <FUNCLINE>36</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>50</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>flatten</FUNCTION>
    <DECORATED>flatten</DECORATED>
    <FUNCLINE>36</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>50</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>flatten</FUNCTION>
    <DECORATED>flatten</DECORATED>
    <FUNCLINE>36</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>85</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>6993</DEFECTCODE>
    <DESCRIPTION>코드 분석에서 OpenMP 구문이 무시되고 단일 스레드 코드를 분석합니다.</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>255</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>mean_cpu</FUNCTION>
    <DECORATED>mean_cpu</DECORATED>
    <FUNCLINE>253</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>271</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>variance_cpu</FUNCTION>
    <DECORATED>variance_cpu</DECORATED>
    <FUNCLINE>269</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>271</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>variance_cpu</FUNCTION>
    <DECORATED>variance_cpu</DECORATED>
    <FUNCLINE>269</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>278</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>variance_cpu</FUNCTION>
    <DECORATED>variance_cpu</DECORATED>
    <FUNCLINE>269</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>292</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>normalize_cpu</FUNCTION>
    <DECORATED>normalize_cpu</DECORATED>
    <FUNCLINE>285</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>292</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>normalize_cpu</FUNCTION>
    <DECORATED>normalize_cpu</DECORATED>
    <FUNCLINE>285</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>431</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>logistic_x_ent_cpu</FUNCTION>
    <DECORATED>logistic_x_ent_cpu</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>431</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>logistic_x_ent_cpu</FUNCTION>
    <DECORATED>logistic_x_ent_cpu</DECORATED>
    <FUNCLINE>425</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>463</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '-' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '-' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>softmax</FUNCTION>
    <DECORATED>softmax</DECORATED>
    <FUNCLINE>454</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>478</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>softmax_cpu</FUNCTION>
    <DECORATED>softmax_cpu</DECORATED>
    <FUNCLINE>473</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>478</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>softmax_cpu</FUNCTION>
    <DECORATED>softmax_cpu</DECORATED>
    <FUNCLINE>473</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>478</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>softmax_cpu</FUNCTION>
    <DECORATED>softmax_cpu</DECORATED>
    <FUNCLINE>473</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>478</LINE>
      <COLUMN>97</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>softmax_cpu</FUNCTION>
    <DECORATED>softmax_cpu</DECORATED>
    <FUNCLINE>473</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>597</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>6328</DEFECTCODE>
    <DESCRIPTION>크기 불일치: 'unsigned __int64'이(가) _Param_(2)으로 전달되었습니다. 다음 호출에는 'int'이(가) 필요합니다. 'printf'. </DESCRIPTION>
    <FUNCTION>find_sim</FUNCTION>
    <DECORATED>find_sim</DECORATED>
    <FUNCLINE>590</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>597</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>6328</DEFECTCODE>
    <DESCRIPTION>크기 불일치: 'unsigned __int64'이(가) _Param_(3)으로 전달되었습니다. 다음 호출에는 'int'이(가) 필요합니다. 'printf'. </DESCRIPTION>
    <FUNCTION>find_sim</FUNCTION>
    <DECORATED>find_sim</DECORATED>
    <FUNCLINE>590</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>597</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>6328</DEFECTCODE>
    <DESCRIPTION>크기 불일치: 'unsigned __int64'이(가) _Param_(4)으로 전달되었습니다. 다음 호출에는 'int'이(가) 필요합니다. 'printf'. </DESCRIPTION>
    <FUNCTION>find_sim</FUNCTION>
    <DECORATED>find_sim</DECORATED>
    <FUNCLINE>590</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>598</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>반환 값이 무시되었습니다. 'getchar'.</DESCRIPTION>
    <FUNCTION>find_sim</FUNCTION>
    <DECORATED>find_sim</DECORATED>
    <FUNCLINE>590</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>611</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>6328</DEFECTCODE>
    <DESCRIPTION>크기 불일치: 'unsigned __int64'이(가) _Param_(2)으로 전달되었습니다. 다음 호출에는 'int'이(가) 필요합니다. 'printf'. </DESCRIPTION>
    <FUNCTION>find_P_constrastive</FUNCTION>
    <DECORATED>find_P_constrastive</DECORATED>
    <FUNCLINE>604</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>611</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>6328</DEFECTCODE>
    <DESCRIPTION>크기 불일치: 'unsigned __int64'이(가) _Param_(3)으로 전달되었습니다. 다음 호출에는 'int'이(가) 필요합니다. 'printf'. </DESCRIPTION>
    <FUNCTION>find_P_constrastive</FUNCTION>
    <DECORATED>find_P_constrastive</DECORATED>
    <FUNCLINE>604</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>611</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>6328</DEFECTCODE>
    <DESCRIPTION>크기 불일치: 'unsigned __int64'이(가) _Param_(4)으로 전달되었습니다. 다음 호출에는 'int'이(가) 필요합니다. 'printf'. </DESCRIPTION>
    <FUNCTION>find_P_constrastive</FUNCTION>
    <DECORATED>find_P_constrastive</DECORATED>
    <FUNCLINE>604</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>612</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>반환 값이 무시되었습니다. 'getchar'.</DESCRIPTION>
    <FUNCTION>find_P_constrastive</FUNCTION>
    <DECORATED>find_P_constrastive</DECORATED>
    <FUNCLINE>604</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>651</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6328</DEFECTCODE>
    <DESCRIPTION>크기 불일치: 'unsigned __int64'이(가) _Param_(3)으로 전달되었습니다. 다음 호출에는 'int'이(가) 필요합니다. 'fprintf'. </DESCRIPTION>
    <FUNCTION>P_constrastive_f</FUNCTION>
    <DECORATED>P_constrastive_f</DECORATED>
    <FUNCLINE>648</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>651</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6328</DEFECTCODE>
    <DESCRIPTION>크기 불일치: 'unsigned __int64'이(가) _Param_(4)으로 전달되었습니다. 다음 호출에는 'int'이(가) 필요합니다. 'fprintf'. </DESCRIPTION>
    <FUNCTION>P_constrastive_f</FUNCTION>
    <DECORATED>P_constrastive_f</DECORATED>
    <FUNCLINE>648</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>652</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>반환 값이 무시되었습니다. 'getchar'.</DESCRIPTION>
    <FUNCTION>P_constrastive_f</FUNCTION>
    <DECORATED>P_constrastive_f</DECORATED>
    <FUNCLINE>648</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>689</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>반환 값이 무시되었습니다. 'getchar'.</DESCRIPTION>
    <FUNCTION>grad_contrastive_loss_positive_f</FUNCTION>
    <DECORATED>grad_contrastive_loss_positive_f</DECORATED>
    <FUNCLINE>678</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>735</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>반환 값이 무시되었습니다. 'getchar'.</DESCRIPTION>
    <FUNCTION>grad_contrastive_loss_negative_f</FUNCTION>
    <DECORATED>grad_contrastive_loss_negative_f</DECORATED>
    <FUNCLINE>724</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>785</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6328</DEFECTCODE>
    <DESCRIPTION>크기 불일치: 'unsigned __int64'이(가) _Param_(3)으로 전달되었습니다. 다음 호출에는 'int'이(가) 필요합니다. 'fprintf'. </DESCRIPTION>
    <FUNCTION>P_constrastive</FUNCTION>
    <DECORATED>P_constrastive</DECORATED>
    <FUNCLINE>782</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>785</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6328</DEFECTCODE>
    <DESCRIPTION>크기 불일치: 'unsigned __int64'이(가) _Param_(4)으로 전달되었습니다. 다음 호출에는 'int'이(가) 필요합니다. 'fprintf'. </DESCRIPTION>
    <FUNCTION>P_constrastive</FUNCTION>
    <DECORATED>P_constrastive</DECORATED>
    <FUNCLINE>782</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>786</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>반환 값이 무시되었습니다. 'getchar'.</DESCRIPTION>
    <FUNCTION>P_constrastive</FUNCTION>
    <DECORATED>P_constrastive</DECORATED>
    <FUNCLINE>782</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>823</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>반환 값이 무시되었습니다. 'getchar'.</DESCRIPTION>
    <FUNCTION>grad_contrastive_loss_positive</FUNCTION>
    <DECORATED>grad_contrastive_loss_positive</DECORATED>
    <FUNCLINE>813</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>blas.c</FILENAME>
      <LINE>863</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>반환 값이 무시되었습니다. 'getchar'.</DESCRIPTION>
    <FUNCTION>grad_contrastive_loss_negative</FUNCTION>
    <DECORATED>grad_contrastive_loss_negative</DECORATED>
    <FUNCLINE>853</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>