<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>activations.h</FILENAME>
      <LINE>72</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>gelu_activate</FUNCTION>
    <DECORATED>gelu_activate</DECORATED>
    <FUNCLINE>72</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>157</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>157</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>164</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>165</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>166</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>166</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>168</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>169</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>170</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>171</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>172</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>173</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>174</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>175</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>176</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>177</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>178</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>179</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>180</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>237</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>237</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>238</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>238</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_conv_lstm_layer</FUNCTION>
    <DECORATED>make_conv_lstm_layer</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>265</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_history_layer</FUNCTION>
    <DECORATED>make_history_layer</DECORATED>
    <FUNCLINE>243</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>266</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_history_layer</FUNCTION>
    <DECORATED>make_history_layer</DECORATED>
    <FUNCLINE>243</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>268</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>make_history_layer</FUNCTION>
    <DECORATED>make_history_layer</DECORATED>
    <FUNCLINE>243</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>312</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>forward_history_layer</FUNCTION>
    <DECORATED>forward_history_layer</DECORATED>
    <FUNCLINE>288</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>316</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>forward_history_layer</FUNCTION>
    <DECORATED>forward_history_layer</DECORATED>
    <FUNCLINE>288</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>316</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>forward_history_layer</FUNCTION>
    <DECORATED>forward_history_layer</DECORATED>
    <FUNCLINE>288</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>502</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>502</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>505</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>506</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>507</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>507</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>509</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>510</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>511</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>512</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>513</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>514</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>515</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>516</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>517</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>518</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>519</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>520</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>521</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>resize_conv_lstm_layer</FUNCTION>
    <DECORATED>resize_conv_lstm_layer</DECORATED>
    <FUNCLINE>452</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>619</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>remember_state_conv_lstm</FUNCTION>
    <DECORATED>remember_state_conv_lstm</DECORATED>
    <FUNCLINE>617</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>620</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>remember_state_conv_lstm</FUNCTION>
    <DECORATED>remember_state_conv_lstm</DECORATED>
    <FUNCLINE>617</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>630</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>restore_state_conv_lstm</FUNCTION>
    <DECORATED>restore_state_conv_lstm</DECORATED>
    <FUNCLINE>628</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>631</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>restore_state_conv_lstm</FUNCTION>
    <DECORATED>restore_state_conv_lstm</DECORATED>
    <FUNCLINE>628</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>639</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>함수에서 '32788'바이트의 스택을 사용하는데 이 크기가 /analyze:stacksize '16384'을(를) 초과합니다. 일부 데이터를 힙으로 이동하십시오.</DESCRIPTION>
    <FUNCTION>forward_conv_lstm_layer</FUNCTION>
    <DECORATED>forward_conv_lstm_layer</DECORATED>
    <FUNCLINE>639</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>748</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>forward_conv_lstm_layer</FUNCTION>
    <DECORATED>forward_conv_lstm_layer</DECORATED>
    <FUNCLINE>639</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>749</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>forward_conv_lstm_layer</FUNCTION>
    <DECORATED>forward_conv_lstm_layer</DECORATED>
    <FUNCLINE>639</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>754</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>forward_conv_lstm_layer</FUNCTION>
    <DECORATED>forward_conv_lstm_layer</DECORATED>
    <FUNCLINE>639</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>755</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>forward_conv_lstm_layer</FUNCTION>
    <DECORATED>forward_conv_lstm_layer</DECORATED>
    <FUNCLINE>639</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>756</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>forward_conv_lstm_layer</FUNCTION>
    <DECORATED>forward_conv_lstm_layer</DECORATED>
    <FUNCLINE>639</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>776</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>함수에서 '32788'바이트의 스택을 사용하는데 이 크기가 /analyze:stacksize '16384'을(를) 초과합니다. 일부 데이터를 힙으로 이동하십시오.</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>812</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>812</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>813</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>813</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>815</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>815</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>816</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>816</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>817</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>817</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>820</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>822</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>825</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>958</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>959</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>960</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>961</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Yolo_v4\darknet\src\</FILEPATH>
      <FILENAME>conv_lstm_layer.c</FILENAME>
      <LINE>962</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>backward_conv_lstm_layer</FUNCTION>
    <DECORATED>backward_conv_lstm_layer</DECORATED>
    <FUNCLINE>776</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>